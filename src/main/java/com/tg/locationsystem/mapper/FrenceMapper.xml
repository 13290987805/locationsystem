<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tg.locationsystem.mapper.FrenceMapper">
  <resultMap id="BaseResultMap" type="com.tg.locationsystem.entity.Frence">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="polyline" jdbcType="VARCHAR" property="polyline" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="data" jdbcType="VARCHAR" property="data" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="reserved2_date" jdbcType="TIMESTAMP" property="reserved2Date" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="map_key" jdbcType="VARCHAR" property="mapKey" />
    <result column="set_switch" jdbcType="VARCHAR" property="setSwitch" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, polyline, phone, data, type, reserved2_date, name, map_key, set_switch
  </sql>

  <!--打开围栏开关-->
  <update id="setSwitch" >
    update frence
    set set_switch = #{setSwitch}
    where user_id= #{userid}
  </update>

  <!--模糊查询围栏-->
  <select id="getFrenceByCondition"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from frence
    WHERE   user_id=#{userid}
    AND
    (name LIKE CONCAT(CONCAT('%',#{msg},'%')) OR type LIKE CONCAT(CONCAT('%',#{msg},'%')))
  </select>

  <!--得到所有围栏-->
  <select id="getFrenceList"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from frence
  </select>

  <!--根据围栏名称得到围栏对象-->
  <select id="getFrenceByname"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from frence
    WHERE   user_id=#{userid} AND name=#{name}
  </select>

  <!--查看已存在的电子围栏-->
  <select id="getfrenceByUserId"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from frence
    WHERE   user_id=#{id}
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from frence
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from frence
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tg.locationsystem.entity.Frence">
    insert into frence (id, user_id, polyline, 
      phone, data, type, 
      reserved2_date, name, map_key, 
      set_switch)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{polyline,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{data,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{reserved2Date,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, #{mapKey,jdbcType=VARCHAR}, 
      #{setSwitch,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tg.locationsystem.entity.Frence" useGeneratedKeys="true" keyProperty="id">
    insert into frence
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="polyline != null">
        polyline,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="data != null">
        data,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="reserved2Date != null">
        reserved2_date,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="mapKey != null">
        map_key,
      </if>
      <if test="setSwitch != null">
        set_switch,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="polyline != null">
        #{polyline,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="data != null">
        #{data,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="reserved2Date != null">
        #{reserved2Date,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="mapKey != null">
        #{mapKey,jdbcType=VARCHAR},
      </if>
      <if test="setSwitch != null">
        #{setSwitch,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tg.locationsystem.entity.Frence">
    update frence
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="polyline != null">
        polyline = #{polyline,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="reserved2Date != null">
        reserved2_date = #{reserved2Date,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="mapKey != null">
        map_key = #{mapKey,jdbcType=VARCHAR},
      </if>
      <if test="setSwitch != null">
        set_switch = #{setSwitch,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tg.locationsystem.entity.Frence">
    update frence
    set user_id = #{userId,jdbcType=INTEGER},
      polyline = #{polyline,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      data = #{data,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      reserved2_date = #{reserved2Date,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      map_key = #{mapKey,jdbcType=VARCHAR},
      set_switch = #{setSwitch,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>