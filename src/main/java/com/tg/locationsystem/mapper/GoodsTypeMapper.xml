<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tg.locationsystem.mapper.GoodsTypeMapper">
  <resultMap id="BaseResultMap" type="com.tg.locationsystem.entity.GoodsType">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="img" jdbcType="VARCHAR" property="img" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, name, img, create_time
  </sql>
  <!--模糊查询,搜索物品类型-->
  <select id="getGoodsTypeByMsg"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from goods_type
    WHERE  user_id=#{userid}
    AND name LIKE CONCAT(CONCAT('%',#{msg},'%'))
  </select>

  <!--根据img得到物品类型-->
  <select id="getGoodsTypeByImg"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from goods_type
    WHERE  img=#{img}
  </select>

  <!--根据物品类型名称得到物品类型对象-->
  <select id="getGoodsTypeByName"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from goods_type
    WHERE  user_id=#{userid} AND name=#{typename}
  </select>


  <!--得到用户下所有的物品类型对象-->
  <select id="getGoodsTypeList"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from goods_type
    WHERE  user_id=#{id}
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods_type
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods_type
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tg.locationsystem.entity.GoodsType">
    insert into goods_type (id, user_id, name, 
      img, create_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{img,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.tg.locationsystem.entity.GoodsType" useGeneratedKeys="true" keyProperty="id">
    insert into goods_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="img != null">
        img,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tg.locationsystem.entity.GoodsType">
    update goods_type
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tg.locationsystem.entity.GoodsType">
    update goods_type
    set user_id = #{userId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>