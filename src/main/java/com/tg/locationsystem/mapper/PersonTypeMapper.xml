<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tg.locationsystem.mapper.PersonTypeMapper">
  <resultMap id="BaseResultMap" type="com.tg.locationsystem.entity.PersonType">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="type_name" jdbcType="VARCHAR" property="typeName" />
    <result column="logo" jdbcType="VARCHAR" property="logo" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="reservde1_string" jdbcType="VARCHAR" property="reservde1String" />
    <result column="reserved2_int" jdbcType="INTEGER" property="reserved2Int" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, type_name, logo, create_time, reservde1_string, reserved2_int
  </sql>

  <!--根据img得到人员类型-->
  <select id="getPersonTypeByImg"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from person_type
    WHERE  logo=#{img}
  </select>

  <!--人员类型模糊查询-->
  <select id="getPersonsTypeByMsg"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from person_type
    WHERE  user_id=#{userid}
      AND type_name LIKE CONCAT(CONCAT('%',#{msg},'%'))
  </select>

  <!--根据人员类型名称得到人员类型对象-->
  <select id="getPersonTypeByName"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from person_type
    WHERE  user_id=#{id} AND type_name=#{typeName}
  </select>

  <!--得到用户下所有的人员类型对象-->
  <select id="getPersonTypeList"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from person_type
    WHERE  user_id=#{id}
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from person_type
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from person_type
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tg.locationsystem.entity.PersonType">
    insert into person_type (id, user_id, type_name, 
      logo, create_time, reservde1_string, 
      reserved2_int)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{typeName,jdbcType=VARCHAR}, 
      #{logo,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{reservde1String,jdbcType=VARCHAR}, 
      #{reserved2Int,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.tg.locationsystem.entity.PersonType" useGeneratedKeys="true" keyProperty="id">
    insert into person_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="typeName != null">
        type_name,
      </if>
      <if test="logo != null">
        logo,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="reservde1String != null">
        reservde1_string,
      </if>
      <if test="reserved2Int != null">
        reserved2_int,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="typeName != null">
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="logo != null">
        #{logo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reservde1String != null">
        #{reservde1String,jdbcType=VARCHAR},
      </if>
      <if test="reserved2Int != null">
        #{reserved2Int,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tg.locationsystem.entity.PersonType">
    update person_type
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="typeName != null">
        type_name = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="logo != null">
        logo = #{logo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reservde1String != null">
        reservde1_string = #{reservde1String,jdbcType=VARCHAR},
      </if>
      <if test="reserved2Int != null">
        reserved2_int = #{reserved2Int,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tg.locationsystem.entity.PersonType">
    update person_type
    set user_id = #{userId,jdbcType=INTEGER},
      type_name = #{typeName,jdbcType=VARCHAR},
      logo = #{logo,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      reservde1_string = #{reservde1String,jdbcType=VARCHAR},
      reserved2_int = #{reserved2Int,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>